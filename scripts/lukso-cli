#!/bin/bash

# Default values if not provided by user
IS_VALIDATOR=false;
# "anonymous" in ASCII hex
ETHERBASE=0x616e6f6e796d6f75730000000000000000000000;
EXTERNAL_IP=$(curl -s v4.ident.me);
NODE_NAME=random_$(tr -dc A-Za-z0-9 </dev/urandom | head -c 10 ; echo '');
PANDORA_BOOTNODE="enode://7fc0798b46c15afe0705cfaa45c924bcbb21391b34d8f8349722aa612975e395066dc668eecabfec74cf9ab09e6b33381fbecfd8749d55d764fc07860e7a6101@35.198.116.152:30405,enode://cdf24e6dcc85f9497492c90b83887e4f4e274784e20d44bc3c811f66b138823f75f9b7d359c73f93936ddf66ccbbb28f6adf11cf61f1a06b66fbf5fc00b14a64@34.141.108.10:30405,enode://3c656990bc9afd51224c9ec59977646f244b51dec41234389c1596b296c50a735be990f9157eb87bba4fe107ca82ecc15254a3b77c0f20f2cef6058a02281206@35.198.139.247:30405,enode://83f8c0acb07fd1ff8480e0770290c2230d78f0bbda3b6844c31cea3f159a3fd7eefdbf80030fc63b550785ae107c23872c3af95c8e08cc0e8a3117e195c38862@34.141.1.216:30405,enode://b0ded18e3f5ed6a2aa0a3857c8c99e209134183b23f16393396a10830558b43d3521b7b7ba154e4cbe33092c29ec0ebadef2e3d4cf5ae6a97d2a2a10e5efa281@34.141.32.132:30405,enode://52a7d3f6c7d6d6ec750c24e1bae11b3d853b610d23cba072ac3608200f7225594e5da0ec169b1152e0a1fe5145406be31c18f1d69efd4008e13e4d79e5eed0bd@35.198.87.127:30405,enode://ae95fe76589aea5b0ab5e29ca1842a8df3154c9efc41944aa3341085f758b87ac0d3ad4ee43aca1ba766493dc06d116ab36c945ecedcda81a909b72a1de4e095@34.141.108.77:30405,enode://a386149c437e997617890f42a4329a5ffa39ff2629f55c9e671db79a305ceea9de9ac5a7912b3abf93fdd145a61548263cc6cb5f1560d62e0cd5d570b7511de1@34.107.0.226:30405";
VANGUARD_BOOTNODE="enr:-LK4QE7e2cPvdxIXqDpyAJxGNwe94S60ePpcSusD1XSNffDUbD3CRCe0_QaO7l9TZ3SpQwMHW7Dy-dvRcQvC46z_VRkBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDm-OYdAAAAAP__________gmlkgnY0gmlwhCPGdJiJc2VjcDI1NmsxoQOaQqzUEAQzumuwgQZfKarmxpskp4SFsz1AOQx5amJUrIN0Y3CCMsiDdWRwgi7g,enr:-LK4QD_A7Ep8qzIVHPcu62fUZsPFaZlLcZy0YWvWXMK4YOIRDu9mUSl9X6nOCe7FBqVUrqixDBFFM0HOThmQC9l2TI8Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDm-OYdAAAAAP__________gmlkgnY0gmlwhCKNbAqJc2VjcDI1NmsxoQK8YOajYgPAPcb0lcc2lOW4s4SBTchGfjgX5bft1QHOsoN0Y3CCMsiDdWRwgi7g,enr:-LK4QJyemID3cQp5BaD8G6oY8wZej560-6auVubAz5fFZGXJKUnlZiw2JR-z5SHXA9zPoul5cJznCXYRB8UFXFVG7UkBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDm-OYdAAAAAP__________gmlkgnY0gmlwhCPGi_eJc2VjcDI1NmsxoQIzAnDzEx5f5hFSApbhTZglniWRTs7QeL5lt20JfHLccIN0Y3CCMsiDdWRwgi7g,enr:-LK4QBpp-XWjxs5A6bZfoRbrlLnCi7ei_alBGeY4iUREGhFmaRZXTw-qmmlUG-IVT3nqEnBDufxgMtKc2hHdaubNCswBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDm-OYdAAAAAP__________gmlkgnY0gmlwhCKNAdiJc2VjcDI1NmsxoQIdsceHoHDD0Tc8e_x8-jqa0djCwiV9MTAl_WlLp7d-gIN0Y3CCMsiDdWRwgi7g,enr:-LK4QFpwZM4Nx9VNzuYEuvpygqe4U2TuzspdrhZyHz-czAQ1AY58yK8zTtBn9TaX37yiVH6zeVihRdVHawEvriFPtVQBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDm-OYdAAAAAP__________gmlkgnY0gmlwhCKNIISJc2VjcDI1NmsxoQJvbwctdAF4fQXGtbsLyVOoYcUvjBHy2IHFxe9mqyNlnoN0Y3CCMsiDdWRwgi7g,enr:-LK4QAYyPujw0PP5KHyjLCZlhkzWXZveQSUurgkOqn-KNu1wceYcVa89nJZzwFmpReur4jwDzAQLLFIuE3slUOWCAWIBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDm-OYdAAAAAP__________gmlkgnY0gmlwhCPGV3-Jc2VjcDI1NmsxoQKkGOJ1gRgXDBf8kNWrUUZPeJB-w4m8w8yNJ9b48hHaLIN0Y3CCMsiDdWRwgi7g,enr:-LK4QJ7R3abbwpd7MEvWgvQ9YnYPIgKz-qOSpHmKdlpPLGt-S85s7wsCeNgP1qlgoeG6Bs74JqYrwM19uba-zw08mKgBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDm-OYdAAAAAP__________gmlkgnY0gmlwhCKNbE2Jc2VjcDI1NmsxoQMlk-SRCspGTY3rdVrUoGIVoRRY3XYNjf72Q0oJzTEtIYN0Y3CCMsiDdWRwgi7g,enr:-LK4QMD_Eyz2SVO18erTMYRgfo7knwJV02oiVSBMH0gueATTLHLZP9XVTFOTCY5gRzx7H4vEg1deRXHNh8cDJ_UK-M4Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDm-OYdAAAAAP__________gmlkgnY0gmlwhCJrAOKJc2VjcDI1NmsxoQOflBNXq9-Uq8utTin2BshXGME9dvgQ0ym5P8de34GTXoN0Y3CCMsiDdWRwgi7g";
IS_BOOTNODE_ZERO=false;

optspec=":hv-:"
while getopts "$optspec" optchar; do
    case "${optchar}" in
        -)
            case "${OPTARG}" in
                reset)
                    rm -rf -v ./vanguard/va* \
                    ./vanguard/network-keys \
                    ./vanguard/beaconchaindata/ \
                    ./vanguard/metaData \
                    ./pandora/geth \
                    ./pandora/geth.ipc \
                    ./pandora/keystore;
                    exit;

                    #val="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ))
                    #echo "Parsing option: '--${OPTARG}', value: '${val}'" >&2;
                    ;;
                full-reset)
                    read -p "Are you sure? Binaries will have to be downloaded again (Y/N)" -n 1 -r
                    echo    # (optional) move to a new line
                    if [[ $REPLY =~ ^[Yy]$ ]]
                    then
                     rm -rf -v ./pandora \
                     ./vanguard
                    fi
                    exit

                    #val="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ))
                    #echo "Parsing option: '--${OPTARG}', value: '${val}'" >&2;
                    ;;
                validate)
                    if [[ ! -f ./password.txt ]]; then
                      echo "No password.txt found, create it if you want to start validator.";
                      exit
                    fi
                    IS_VALIDATOR=true;

                    #val="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ))
                    #echo "Parsing option: '--${OPTARG}', value: '${val}'" >&2;
                    ;;
                etherbase)
                    val="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ));
                    ETHERBASE=$val;
                    #echo "Parsing option: '--${OPTARG}', value: '${val}'" >&2;
                    ;;
                etherbase=*)
                    val=${OPTARG#*=}
                    ETHERBASE=$val;
                    opt=${OPTARG%=$val}
                    #echo "Parsing option: '--${opt}', value: '${val}'" >&2
                    ;;
                name)
                    val="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ));
                    NODE_NAME=$val;
                    #echo "Parsing option: '--${OPTARG}', value: '${val}'" >&2;
                    ;;
                external-ip)
                    val="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ));
                    EXTERNAL_IP=$val;
                    #echo "Parsing option: '--${OPTARG}', value: '${val}'" >&2;
                    ;;
                pandora-nodekey)
                    echo "--pandora-nodekey: This is unsafe!!! Use only for development purposes, pandora store it's key in ./pandora/geth/nodekey";
                    val="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ));
                    mkdir -p ./pandora/geth;
                    echo $val > pandora/geth/nodekey;
                    #echo "Parsing option: '--${OPTARG}', value: '${val}'" >&2;
                    ;;
                vanguard-nodekey)
                    echo "--vanguard-nodekey: This is unsafe!!! Use only for development purposes, vanguard stores it's key in ./vanguard/network-keys";
                    val="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ));
                    mkdir ./vanguard;
                    echo -n $val > vanguard/network-keys;

                    #echo "Parsing option: '--${OPTARG}', value: '${val}'" >&2;
                    ;;
                pandora-bootnode)
                    val="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ));
                    echo $IS_BOOTNODE_ZERO;
                    if ! $IS_BOOTNODE_ZERO; then
                        PANDORA_BOOTNODE=$val;
                    fi
                    #echo "Parsing option: '--${OPTARG}', value: '${val}'" >&2;
                    ;;
                vanguard-bootnode)
                    val="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ));
                    if ! $IS_BOOTNODE_ZERO; then
                        VANGUARD_BOOTNODE=$val;
                    fi
                    #echo "Parsing option: '--${OPTARG}', value: '${val}'" >&2;
                    ;;
                bootnode-zero)
                    IS_BOOTNODE_ZERO=true;
                    PANDORA_BOOTNODE="";
                    VANGUARD_BOOTNODE="";

                    #val="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ))
                    #echo "Parsing option: '--${OPTARG}', value: '${val}'" >&2;
                    ;;
                *)
                    if [ "$OPTERR" = 1 ] && [ "${optspec:0:1}" != ":" ]; then
                        echo "Unknown option --${OPTARG}" >&2
                    fi
                    ;;
            esac;;
        h)
            echo "usage: $0 [-v] [--loglevel[=]<value>]" >&2
            exit 2
            ;;
        v)
            echo "Parsing option: '-${optchar}'" >&2
            ;;
        *)
            if [ "$OPTERR" != 1 ] || [ "${optspec:0:1}" = ":" ]; then
                echo "Non-option argument: '-${OPTARG}'" >&2
            fi
            ;;
    esac
done
echo
echo "Node Name:" $NODE_NAME;
echo "Etherbase:" $ETHERBASE;
echo "Is Validator:" $IS_VALIDATOR;
echo "External IP:" $EXTERNAL_IP;
echo "PANDORA_BOOTNODE:" $PANDORA_BOOTNODE;
echo "VANGUARD_BOOTNODE:" $VANGUARD_BOOTNODE;

#TODO: flag customization
#necessary_args=(
#  -m "$MONGO_HOST"
#  -t "$NEO_URI"
#  -stdout
#)

$(dirname "$0")/lukso \
--force-clear-db \
--vanguard-grpc-endpoint=127.0.0.1:4000 \
--http \
--http.addr=0.0.0.0 \
--http.port=7877 \
--ws \
--ws.addr=0.0.0.0 \
--ws.port=7878 \
--pandora-rpc-endpoint=$PWD/pandora/geth.ipc \
--verbosity=trace \
--accept-terms-of-use \
--pandora-verbosity 4  \
--pandora-etherbase $ETHERBASE \
--vanguard-bootnode=$VANGUARD_BOOTNODE \
--pandora-bootnodes=$PANDORA_BOOTNODE \
--pandora-ethstats $NODE_NAME:VIyf7EjWlR49@catalyst.silesiacoin.com \
--vanguard-verbosity=trace \
--validator-verbosity=trace \
--vanguard-disable-sync \
--pandora-output \
--pandora-ws-apis=admin,net,eth,debug,ethash,miner,personal,txpool,web3 \
--pandora-nat=extip:$EXTERNAL_IP \
--pandora-ws-origin="*" \
--pandora-http-origin="*" \
--vanguard-p2p-host=$EXTERNAL_IP
